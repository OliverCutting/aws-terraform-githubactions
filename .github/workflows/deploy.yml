name: Deploy
on: [push]
permissions: read-all
jobs:
  kics:
    name: KICS
    permissions:
      contents: read
      actions: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: run kics Scan
        uses: checkmarx/kics-github-action@v2.1.3
        with:
          path: 'Terraform'
          ignore_on_exit: results
          output_path: myResults/
      - name: display kics results
        run: |
          cat myResults/results.json

  validate:
    name: Terraform Validate
    needs: kics
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Terraform
    steps:
    - name: 'Checkout GitHub repository'
      uses: actions/checkout@v2
    - name: 'Configure AWS credentials'
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: 'eu-west-2'
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.9.8
    - name: Terraform Init
      run: terraform init
    - name: Terraform Validate
      run: terraform validate

  plan-feature:
    name: Plan feature
    if: contains(github.ref, 'feature')
    needs: validate
    runs-on: ubuntu-latest
    env:
      environment: feature
    defaults:
      run:
        working-directory: ./Terraform
    environment: 
      name: feature
    steps:
    - name: 'Checkout GitHub repository'
      uses: actions/checkout@v2
    - name: 'Configure AWS credentials'
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: 'eu-west-2'
    - name: Terraform init
      run: terraform init
    - name: Create workspace
      run: terraform workspace select -or-create $(echo ${{ github.ref_name }} | tr / -)
    - name: Terraform plan
      run: terraform plan -out=${{ env.environment }}-tfplan
    - name: Upload tfplan artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.environment }}-tfplan
        path: Terraform/${{ env.environment }}-tfplan
  plan-develop:
    name: Plan develop
    if: github.ref == 'refs/heads/main'
    needs: validate
    runs-on: ubuntu-latest
    env:
      environment: develop
    defaults:
      run:
        working-directory: ./Terraform
    environment: 
      name: develop
    steps:
    - name: 'Checkout GitHub repository'
      uses: actions/checkout@v2
    - name: 'Configure AWS credentials'
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: 'eu-west-2'
    - name: Terraform init
      run: terraform init
    - name: Create workspace
      run: terraform workspace select -or-create $(echo ${{ env.environment }} | tr / -)
    - name: Terraform plan
      run: terraform plan -out=${{ env.environment }}-tfplan
    - name: Upload tfplan artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.environment }}-tfplan
        path: Terraform/${{ env.environment }}-tfplan
  plan-production:
    name: Plan production
    if: contains(github.ref, 'tags/')
    needs: validate
    runs-on: ubuntu-latest
    env:
      environment: production
    defaults:
      run:
        working-directory: ./Terraform
    environment: 
      name: production
    steps:
    - name: 'Checkout GitHub repository'
      uses: actions/checkout@v2
    - name: 'Configure AWS credentials'
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: 'eu-west-2'
    - name: Terraform init
      run: terraform init
    - name: Create workspace
      run: terraform workspace select -or-create $(echo ${{ env.environment }} | tr / -)
    - name: Terraform plan
      run: terraform plan -out=${{ env.environment }}-tfplan
    - name: Upload tfplan artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.environment }}-tfplan
        path: Terraform/${{ env.environment }}-tfplan

  apply-feature:
    name: Apply feature
    if: contains(github.ref, 'feature')
    needs: plan-feature
    runs-on: ubuntu-latest
    env:
      environment: feature
    defaults:
      run:
        working-directory: ./Terraform
    environment: 
      name: feature
    steps:
    - name: 'Checkout GitHub repository'
      uses: actions/checkout@v2
    - name: 'Configure AWS credentials'
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: 'eu-west-2'
    - name: Download tfplan artifact
      uses: actions/download-artifact@v4
      with:
        name: ${{ env.environment }}-tfplan
    - name: Terraform init
      run: terraform init
    - name: Select workspace
      run: terraform workspace select $(echo ${{ github.ref_name }} | tr / -)
    - name: Terraform Apply
      run: terraform apply -auto-approve ../${{ env.environment }}-tfplan
  apply-develop:
    name: Apply develop 
    if: github.ref == 'refs/heads/main'
    needs: plan-develop
    runs-on: ubuntu-latest
    env:
      environment: develop
    defaults:
      run:
        working-directory: ./Terraform
    environment: 
      name: develop
    steps:
    - name: 'Checkout GitHub repository'
      uses: actions/checkout@v2
    - name: 'Configure AWS credentials'
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: 'eu-west-2'
    - name: Download tfplan artifact
      uses: actions/download-artifact@v4
      with:
        name: ${{ env.environment }}-tfplan
    - name: Terraform init
      run: terraform init
    - name: Select workspace
      run: terraform workspace select $(echo ${{ env.environment }} | tr / -)
    - name: Terraform Apply
      run: terraform apply -auto-approve ../${{ env.environment }}-tfplan
  apply-production:
    name: Apply production
    if: contains(github.ref, 'tags/')
    needs: plan-production
    runs-on: ubuntu-latest
    env:
      environment: production
    defaults:
      run:
        working-directory: ./Terraform
    environment: 
      name: production
    steps:
    - name: 'Checkout GitHub repository'
      uses: actions/checkout@v2
    - name: 'Configure AWS credentials'
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: 'eu-west-2'
    - name: Download tfplan artifact
      uses: actions/download-artifact@v4
      with:
        name: ${{ env.environment }}-tfplan
    - name: Terraform init
      run: terraform init
    - name: Select workspace
      run: terraform workspace select $(echo ${{ env.environment }} | tr / -)
    - name: Terraform Apply
      run: terraform apply -auto-approve ../${{ env.environment }}-tfplan
